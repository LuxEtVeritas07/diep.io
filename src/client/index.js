// Generated by CoffeeScript 2.5.1
var T, Tanks, app, player, socket;

import * as PIXI from 'pixi.js';

import io from 'socket.io-client';

import tanks from "./../public/assets/tanks.json";

socket = io(":8081");

socket.on("connect", function() {
  console.log("CONNECTED!");
  socket.on("disconnect", function() {
    console.log("DISCONNECTED!");
  });
});

app = new PIXI.Application({
  width: window.innerWidth,
  height: window.innerHeight,
  backgroundColor: 0x1099bb,
  resolution: window.devicePixelRatio || 1
});

app.renderer.autoResize = true;

document.body.appendChild(app.view);

Tanks = class Tanks {
  constructor(tanks) {
    this.tanks = tanks.tanks;
    this.types = tanks.types;
    return;
  }

  Tank(name, radius) {
    var container, graphics, i, j, k, l, len, len1, p, ref, ref1, tank;
    tank = this.tanks[name];
    if (tank === void 0) {
      console.error("Nie ma takiego czo≈Çgu!");
    }
    container = new PIXI.Container();
    ref = tank.addDowns;
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      if (i.type === "rectangle") {
        graphics = new PIXI.Graphics();
        graphics.lineStyle(3, 0x5B6465);
        graphics.beginFill(0x97989A);
        graphics.drawRect(i.offset[0] * radius - i.width / 2 * radius, i.offset[1] * radius - i.height / 2 * radius, i.width * radius, i.height * radius);
        graphics.endFill();
        graphics.rotation = i.rotation / 180 * Math.PI;
        container.addChild(graphics);
      } else if (this.types[i.type] !== void 0) {
        graphics = new PIXI.Graphics();
        graphics.lineStyle(3, 0x5B6465);
        graphics.beginFill(0x97989A);
        p = true;
        ref1 = this.types[i.type];
        for (l = 0, len1 = ref1.length; l < len1; l++) {
          j = ref1[l];
          if (p) {
            p = false;
            graphics.moveTo(j[0] * radius, j[1] * radius);
          } else {
            graphics.lineTo(j[0] * radius, j[1] * radius);
          }
          console.log(j);
        }
        graphics.closePath();
        graphics.endFill();
        graphics.rotation = i.rotation / 180 * Math.PI;
        container.addChild(graphics);
      }
    }
    if (tank.shape === "circle") {
      graphics = new PIXI.Graphics();
      graphics.lineStyle(3, 0x5B6465);
      graphics.beginFill(0x4BB6E0, 1);
      graphics.drawCircle(0, 0, radius);
      graphics.endFill();
      container.addChild(graphics);
    } else if (tank.shape === "rectangle") {
      graphics = new PIXI.Graphics();
      graphics.lineStyle(3, 0x5B6465);
      graphics.beginFill(0x4BB6E0, 1);
      graphics.drawRect(-radius, -radius, radius * 2, radius * 2);
      graphics.endFill();
      container.addChild(graphics);
    }
    return container;
  }

};

T = new Tanks(tanks);

player = T.Tank("necromancer", 50);

player.position.set(window.innerWidth / 2, window.innerHeight / 2);

app.stage.addChild(player);
